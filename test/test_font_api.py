# coding: utf-8

"""
    Fonts API

    Everything Fonts Font API gives you API access to fonts, font properties and font tools. You can get all the details about font upto the individual glyph level and do amazing things with it. This is a first of its kind on the cloud. Font conversion API allows you to easily convert between various font formats using REST API. ttf,otf,svg,pfa,pfb, svg, woff,woff2, eot, ufo and several other formats are supported. Here are the individual API links:    ## Font Management API ##   All the things you need to manage a font on the cloud. [Click here to subscribe](https://everythingfonts.com/api/font)   ## @font-face generation API ##   Easily generate @font-face kit from variety of font formats. This service lets you generate ttf, otf, svg and woff formats that the browsers understand along with the relevant CSS definition. [Click here to subscribe](https://everythingfonts.com/api/ffgen)    ## Font Coversion API ##   Convert from one font format to another. Many many font format conversions are supported. [Click here to subscribe](https://everythingfonts.com/api/convert)   ## Font Subsetting API ##   Subset fonts easily. You can specify unicode range or individual characters for subsettings. [Click here to subscribe](https://everythingfonts.com/api/subset)   ## Font Hinting API ##   Font hinting on the cloud. Multiple hinting schemes supported. [Click here to subscribe](https://everythingfonts.com/api/hinting)   # noqa: E501

    OpenAPI spec version: 2.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.font_api import FontApi  # noqa: E501
from swagger_client.rest import ApiException


class TestFontApi(unittest.TestCase):
    """FontApi unit test stubs"""

    def setUp(self):
        self.api = FontApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_font_fontid_glyph_id_get(self):
        """Test case for font_fontid_glyph_id_get

        """
        pass

    def test_font_fontid_glyph_id_image_get(self):
        """Test case for font_fontid_glyph_id_image_get

        """
        pass

    def test_font_fontid_glyph_list_get(self):
        """Test case for font_fontid_glyph_list_get

        """
        pass

    def test_font_get(self):
        """Test case for font_get

        """
        pass

    def test_font_id_coverage_get(self):
        """Test case for font_id_coverage_get

        """
        pass

    def test_font_id_file_fileid_get(self):
        """Test case for font_id_file_fileid_get

        """
        pass

    def test_font_id_files_get(self):
        """Test case for font_id_files_get

        """
        pass

    def test_font_id_get(self):
        """Test case for font_id_get

        """
        pass

    def test_font_id_image_get(self):
        """Test case for font_id_image_get

        """
        pass

    def test_font_id_license_get(self):
        """Test case for font_id_license_get

        """
        pass

    def test_font_id_name_get(self):
        """Test case for font_id_name_get

        """
        pass


if __name__ == '__main__':
    unittest.main()
